const e=JSON.parse('{"key":"v-e1b4821a","path":"/%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/%E8%AF%AD%E6%B3%95%E8%BF%9B%E9%98%B6/90.generic.html","title":"泛型","lang":"zh-CN","frontmatter":{"description":"最初的Go是没有泛型这一说法的，但自从诞生以来，社区关于Go呼声最高的事情就是希望加入泛型。终于Go在1.18版本加入了对泛型的支持，不过Go的泛型依旧保留了Go自己的特点。 示例 在开始之前，先来看一个简单的例子。 这是一个功能十分简单的函数，作用就是将两个int类型的整数相加并返回结果，倘若想要传入两个float64类型的浮点数求和的话，显然是不可...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/%E8%AF%AD%E6%B3%95%E8%BF%9B%E9%98%B6/90.generic.html"}],["meta",{"property":"og:site_name","content":"Golang中文学习文档"}],["meta",{"property":"og:title","content":"泛型"}],["meta",{"property":"og:description","content":"最初的Go是没有泛型这一说法的，但自从诞生以来，社区关于Go呼声最高的事情就是希望加入泛型。终于Go在1.18版本加入了对泛型的支持，不过Go的泛型依旧保留了Go自己的特点。 示例 在开始之前，先来看一个简单的例子。 这是一个功能十分简单的函数，作用就是将两个int类型的整数相加并返回结果，倘若想要传入两个float64类型的浮点数求和的话，显然是不可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-25T13:39:21.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-25T13:39:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-25T13:39:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"泛型结构","slug":"泛型结构","link":"#泛型结构","children":[{"level":3,"title":"泛型结构注意点","slug":"泛型结构注意点","link":"#泛型结构注意点","children":[]}]},{"level":2,"title":"类型集","slug":"类型集","link":"#类型集","children":[{"level":3,"title":"类型集注意点","slug":"类型集注意点","link":"#类型集注意点","children":[]}]}],"git":{"createdTime":1676264655000,"updatedTime":1695649161000,"contributors":[{"name":"246859","email":"2633565580@qq.com","commits":3}]},"readingTime":{"minutes":16.89,"words":2534},"filePathRelative":"语言入门/语法进阶/90.generic.md","localizedDate":"2023年2月13日","autoDesc":true}');export{e as data};
